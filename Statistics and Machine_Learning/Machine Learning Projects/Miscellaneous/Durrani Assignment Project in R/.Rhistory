res <- residuals(model10,type='pearson')
type(res)
class(res)
class(lwage)
qqplot(res)
library(openxlsx) # to open xlsx file
#importing 'body.xls' dataset, and stored as dataframe 'dataset'
dataset<-read.xlsx(file.choose())
# Producing a Covariance Matrix using a cov function
cov(dataset)
dataset_corr <- cor(dataset)
dataset_corr
prcomp(dataset)
# PCA analysis using prcomp function
prcomp(dataset)
# PCA analysis using prcomp function
pca <- prcomp(dataset)
pca$rotation
pca
?prcomp
eigen_values<-pca$sdev*pca$sdev
eigen_values
summary(pca)
pca_summary<-summary(pca)
pca_summary$importance
plot(pca,type='l')
pca$x
pca$x[PCA1]
pca$x
pca_summary$importance
cor(pca)
round(cor(pca),3)
round(cor(pca$x),3)
round(cor(pca$rotation),3)
pca$
pca$rotation
pca
biplot(pca,scale=0)
pca_summary
dataset
View(dataset)
pca_summary
pca
pca$x
dataset
0.5967231*106.2+ 0.5012939*89.5+ 0.4994528*71.5+0.2320196*93.5+0.1439023*51.5+0.2619770*32.5
0.5967231*106.2+ 0.5012939*89.5+ 0.4994528*71.5+0.2320196*93.5+0.1439023*51.5+0.2619770*32.5
attach(dataset)
0.5967231*(106.2-mean(shoulder))+ 0.5012939*89.5+ 0.4994528*71.5+0.2320196*93.5+0.1439023*51.5+0.2619770*32.5
0.5967231*(106.2-mean(shoulder))/std(shoulder) + 0.5012939*89.5+ 0.4994528*71.5+0.2320196*93.5+0.1439023*51.5+0.2619770*32.5
0.5967231*(106.2-mean(shoulder))/var(shoulder) + 0.5012939*89.5+ 0.4994528*71.5+0.2320196*93.5+0.1439023*51.5+0.2619770*32.5
0.5967231*(106.2-mean(shoulder))/sqrt(var(shoulder)) + 0.5012939*89.5+ 0.4994528*71.5+0.2320196*93.5+0.1439023*51.5+0.2619770*32.5
dataset
head(dataset)
0.5967231*(106.2-mean(shoulder))/sqrt(var(shoulder)) + 0.5012939*(89.5-mean(chest))/sqrt(var(chest))+ 0.4994528*(71.5-mean(waist))/sqrt(var(waist))+0.2320196*(93.5-mean(hip))/sqrt(var(hip))+0.1439023*(51.5-mean(thigh))/sqrt(var(thigh))+0.2619770*(32.5-mean(biceps))/sqrt(var(biceps))
0.5967231*(106.2-mean(shoulder))/sqrt(var(shoulder)) + 0.5012939*(89.5-mean(chest))/sqrt(var(chest))+ 0.4994528*(71.5-mean(waist))/sqrt(var(waist))+0.2320196*(93.5-mean(hip))/sqrt(var(hip))+0.1439023*(51.5-mean(thigh))/sqrt(var(thigh))+0.2619770*(32.5-mean(bicep))/sqrt(var(bicep))
0.5967231*(106.2-mean(shoulder))/sqrt(var(shoulder)) + 0.5012939*(89.5-mean(chest))/sqrt(var(chest))+ 0.4994528*(71.5-mean(waist))/sqrt(var(waist))+0.2320196*(93.5-mean(hip))/sqrt(var(hip))+0.1439023*(51.5-mean(thigh))/sqrt(var(thigh))+0.2619770*(32.5-mean(bicep))/sqrt(var(bicep))
pca$x
pca_summary
pca
pca1 <- prcomp(dataset,scale. = T)
pca1
pca1$x
0.3862980*(106.2-mean(shoulder))/sqrt(var(shoulder)) + 0.4516065*(89.5-mean(chest))/sqrt(var(chest))+ 0.4476787*(71.5-mean(waist))/sqrt(var(waist))+0.3740616*(93.5-mean(hip))/sqrt(var(hip))+0.3354521*(51.5-mean(thigh))/sqrt(var(thigh))+0.4404078*(32.5-mean(bicep))/sqrt(var(bicep))
0.3862980*(110.5-mean(shoulder))/sqrt(var(shoulder)) + 0.4516065*(97.0-mean(chest))/sqrt(var(chest))+ 0.4476787*(79.0-mean(waist))/sqrt(var(waist))+0.3740616*(94.8-mean(hip))/sqrt(var(hip))+0.3354521*(51.5-mean(thigh))/sqrt(var(thigh))+0.4404078*(34.4-mean(bicep))/sqrt(var(bicep))
pca1 <- prcomp(dataset,scale. = T)
pca1
pca1$x
head(pca1$x)
library(openxlsx) # to open xlsx file
#importing 'body.xls' dataset, and stored as dataframe 'dataset'
pen<-read.delim(file.choose())
#importing 'body.xls' dataset, and stored as dataframe 'dataset'
pen<-read.delim('penguins.txt')
#importing 'body.xls' dataset, and stored as dataframe 'dataset'
pen<-read.delim('penguins.txt')
#importing 'body.xls' dataset, and stored as dataframe 'dataset'
pen<-read.delim(file.choose())
pen
#importing 'penguins.txt', and stored as dataframe 'pen'
pen<-read.delim(file.choose())
pen
pen$island<-as.factor(pen$island)
pen$sex<-as.factor(pen$sex)
pen$year<-as.factor(pen$year)
#Structure of Data
str(pen)
qqplot(pen)
qqplot(pen$island)
qqplot(pen$island,pen$island)
qqnorm(pen$island,pch=1)
qqnorm(pen$bill_length_mm,pch=1)
qqnorm(pen$bill_length_mm,pch=1,col='red')
qqline(pen$bill_length_mm,lwd = 2)
qqline(pen$bill_length_mm)
qqnorm(pen$bill_length_mm,pch=1,col='red')
qqline(pen$bill_length_mm)
#Structure of Data
str(pen)
qqnorm(pen$bill_depth_mm,pch=1,col='blue')
qqline(pen$bill_depth_mm)
#Univariate qqplot for body variable 'flipper_length_mm'
qqnorm(pen$flipper_length_mm,pch=1,col='brown')
qqline(pen$flipper_length_mm)
#Univariate qqplot for body variable 'body_mass_g'
qqnorm(pen$body_mass_g,pch=1,col='brown')
qqline(pen$body_mass_g)
#Univariate qqplot for body variable 'body_mass_g'
qqnorm(pen$body_mass_g,pch=1,col='cyan')
#Univariate qqplot for body variable 'body_mass_g'
qqnorm(pen$body_mass_g,pch=1,col='green')
qqline(pen$body_mass_g)
#Structure of Data
str(pen)
hist(pen$body_mass_g)
hist(pen$body_mass_g,'green')
hist(pen$body_mass_g,col='green')
hist(pen$flipper_length_mm,col='brown')
# Histogram of 'flipper_length_mm'
hist(pen$flipper_length_mm,col='brown')
# Histogram of 'bill_depth_mm'
hist(pen$bill_depth_mm,col='blue')
# Histogram of 'bill_length_mm'
hist(pen$bill_length_mm,col='red')
shapiro.test(pen$bill_length_mm)
#Structure of Data
str(pen)
#Univariate Shapiro-Wilks test of normality for ‘bill_depth_mm    ’
shapiro.test(pen$bill_depth_mm    )
#Univariate Shapiro-Wilks test of normality for ‘bill_depth_mm    ’
shapiro.test(pen$bill_depth_mm)
#Structure of Data
str(pen)
#Univariate Shapiro-Wilks test of normality for ‘flipper_length_mm    ’
shapiro.test(pen$flipper_length_mm)
#Univariate Shapiro-Wilks test of normality for ‘body_mass_g’
shapiro.test(pen$body_mass_g)
View(pen)
View(pen)
pen
str(pen)
hist(pen$island)
pen$island<-as.factor(pen$island)
pen$sex<-as.factor(pen$sex)
pen$year<-as.factor(pen$year)
hist(pen$island)
str(pen)
pen$island<-as.int(pen$island)
pen$island<-as.integer(pen$island)
hist(pen$island)
hist(pen$island, col='red', xlab = 'Islands')
hist(pen$island, col='red', xlab = 'Islands', title('Frequency Distribution'))
hist(pen$island, col='red', xlab = 'Islands', title('Frequency Distribution'),freq =T )
hist(pen$island, col='red', xlab = 'Islands',freq =T )
str(pen)
str(pen$island)
unique.array(pen$island)
unique(pen$island)
pen$island
#Frequency Distribution of islands:
hist(pen$island, col='red', xlab = 'Islands',breaks =T )
View(pen)
#importing 'penguins.txt', and stored as dataframe 'pen'
pen1<-read.delim(file.choose())
pen1$island
pen$island
#Frequency Distribution of islands:1(Biscoe), 2(Dream), 3(Torgersen)
hist(pen$island, col='red', xlab = 'Islands')
#Frequency Distribution of islands:1(Biscoe), 2(Dream), 3(Torgersen)
hist(pen$island, col='red', xlab = 'Islands',density = T)
#Frequency Distribution of islands:1(Biscoe), 2(Dream), 3(Torgersen)
hist(pen$island, col='red', xlab = 'Islands',main = 'Frequency Distribution of islands')
#Frequency Distribution of islands:1(Biscoe), 2(Dream), 3(Torgersen)
hist(pen$island, col='red', xlab = 'Islands',main = 'Frequency Distribution of islands')
#Frequency Distribution of islands:1(Biscoe), 2(Dream), 3(Torgersen)
hist(pen$island, col='red', xlab = 'Islands',labels = T,main = 'Frequency Distribution of islands')
?scatterplotMatrix
str(pen)
? scatterplotMatrix
?? scatterplotMatrix
scatterplotMatrix(pen)
install.packages('car')
scatterplotMatrix(pen)
library(car)
detach("package:carData", unload = TRUE)
library(car)
scatterplotMatrix(x = pen)
? scatterplotMatrix
scatterplotMatrix(x = pen$island)
scatterplotMatrix(x = pen, groups = pen$island)
#a plot with observations grouped by island using different colours
scatterplotMatrix(x = pen, groups = pen$island,legend = T)
#a plot with observations grouped by island using different colours
scatterplotMatrix(x = pen, groups = pen$island,legend=TRUE)
scatterplotMatrix(x = pen, groups = pen$island,legend=TRUE, smooth = FALSE, regLine = FALSE, diagonal = FALSE)
str(pen)
pen[2:4]
scatterplotMatrix(x = pen[2:4], groups = pen$island,legend=TRUE, smooth = FALSE, regLine = FALSE, diagonal = FALSE)
#a plot with observations grouped by island using different colours
scatterplotMatrix(x = pen[2:4], groups = pen$island,legend=list(coords="bottomleft"), smooth = FALSE, regLine = FALSE, diagonal = FALSE)
str(pen)
attach(pen)
#Dependent variables are 4 body variables
yvars <- cbind(bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g)
island <- factor(island)
mod <- Manova(yvars~island+sex+year, data=pen)
mod
#Applying MANOVA
mod <- Manova(yvars~island+sex+year, data=pen)
install.packages("mvnormalTest")
mod <- Manova(yvars~island+sex+year, data=pen)
mod
library(mvnormalTest)
mod <- Manova(yvars~island+sex+year, data=pen)
mod
install.packages("MANOVA.RM")
detach("package:mvnormalTest", unload = TRUE)
library(MANOVA.RM)
mod <- Manova(yvars~island+sex+year, data=pen)
mod
#Applying MANOVA
mod <- Manova(yvars~island+sex+year, data=pen)
#Applying MANOVA
mod <- manova(yvars~island+sex+year, data=pen)
mod
yvars <- cbind(bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g)
island <- factor(island)
island <- factor(pen1$island)
mod <- manova(yvars~island, data=pen)
mod
#Lets look at MANOVA (other tests)
#Wilks test
summary(mod,test='Wilks', intercept=T)
#Roys test
summary(mod,test='Roy', intercept=T)
#Hotelling Lawley test
summary(mod,test='Hotelling-Lawley', intercept=T)
#Pillai test
summary(mod,test='Pillai', intercept=T)
install.packages("MVN")
library(MVN)
dataset <- read.table('body.dat', header=T)
dataset <- read.table('body.dat', header=T)
dataset <- read.table('body.dat', header=TRUE)
dataset <- read.table(file.choose())
dataset
dataset <- read.table(file.choose(), header = T)
dataset
#importing 'penguins.txt', and stored as dataframe 'pen'
pen<-read.delim(file.choose())
pen
pen$island<-as.factor(pen$island)
pen$sex<-as.factor(pen$sex)
pen$year<-as.factor(pen$year)
#Structure of Data
str(pen)
#Convert dataframe into matrix
dat <- as.matrix(pen)
dat.cov <- var(dat)
dat
dat.cov <- var(dat[2:5])
dat[2:5]
dat
dat.cov <- var(pen[2:5])
dat.cov
#mahalanobis distance
dist <- (mahalanobis(dat, colMeans(dat),dat.cov))
#Convert dataframe into matrix
dat <- as.matrix(pen[2:5])
dat
#mahalanobis distance
dist <- (mahalanobis(dat, colMeans(dat),dat.cov))
dist
n <- length(dist)
n
u <- ((1:n)-0.5)/n
u
p <- qchisq(u,2)
dist_sorted <- sort(dist)
dist_sorted
plot(p,dist_sorted)
p <- qchisq(u,4)
plot(p,dist_sorted)
xy <- cbind(dist_sorted,p)
xy
plot(p,dist_sorted)
abline(0,1)
par(mfrow=c(1,2))
plot(p,dist_sorted)
abline(0,1)
plot(dist_sorted,p)
abline(0,1)
#Covariance calculated
dat.cov <- var(pen[2:5])
dat.cov
#mahalanobis distance
dist <- (mahalanobis(dat, colMeans(dat),dat.cov))
dist
n <- length(dist)
n
u <- ((1:n)-0.5)/n
u
p <- qchisq(u,4)
dist_sorted <- sort(dist)
dist_sorted
xy <- cbind(dist_sorted,p)
library(mvn)
library(MVN)
data <- pen[2:5]
mvn(data,univariatePlot = 'qqplot')
mvn(dat,univariatePlot = 'qqplot')
mvn(data,univariatePlot = "qqplot")
library(mvnormalTest)
mvn(data,univariatePlot = "qqplot")
mvn(data,univariatePlot = "histogram", desc = FALSE)
par(mfrow=c(1,4))
mvn(data,multivariatePlot = "persp", desc = FALSE)
par(mfrow=c(1,2))
mvn(data,multivariatePlot = "persp", desc = FALSE)
par(mfrow=c(1,4))
mvn(data,multivariatePlot = "persp", desc = FALSE)
par(mfrow=c(1,4))
mvn(dat,multivariatePlot = "persp", desc = FALSE)
mvn(dat,multivariatePlot = "contour", desc = FALSE)
par(mfrow=c(1,2))
mvn(dat,multivariatePlot = "persp", desc = FALSE)
mvn(dat,multivariatePlot = "contour", desc = FALSE)
par(mfrow=c(2,2))
mvn(dat,multivariatePlot = "persp", desc = FALSE)
mvn(dat,multivariatePlot = "contour", desc = FALSE)
mvn(dat,multivariatePlot = "persp", desc = FALSE)
mvn(dat,multivariatePlot = "persp")
mvn(data,multivariatePlot = "contour", desc = FALSE)
mvn(data,multivariatePlot = "persp", desc = FALSE)
par(mfrow=c(1,2))
mvn(data,multivariatePlot = "persp", desc = FALSE)
str(pen)
par(mfrow=c(1,2))
mvn(pen[4:5],multivariatePlot = "persp", desc = FALSE)
mvn(pen[4:5],multivariatePlot = "contour", desc = FALSE)
mvn(dat, mvntest="royston", desc=FALSE)
mvn(pen[2:5], mvntest="royston", desc=FALSE)
mvn(pen[2:5], mvntest="mardia", desc=FALSE)
mvn(pen[2:5], mvntest="hz", desc=FALSE)
mvn(pen[2:5], mvnTest = 'mardia', desc=FALSE)
mvn(pen[2:5], mvnTest = 'hz', desc=FALSE)
mvn(pen[2:5], mvnTest = 'royston', desc=FALSE)
pen
yvars
#Dependent variables are 4 body variables: bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g
#Independent variables are factor variables island, sex and year
yvars <- cbind(bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g)
#attaching dataframe 'pen'
attach(pen)
#Dependent variables are 4 body variables: bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g
#Independent variables are factor variables island, sex and year
yvars <- cbind(bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g)
yvars
HotellingsT2Test(yvars~year)
#Using library DescTools
library(DescTools)
HotellingsT2Test(yvars~year)
HotellingsT2Test(yvars~year[year!=2007])
year!=2007
HotellingsT2Test(yvars~sex)
unique(year)
#subset years into pairs: year_first (year1+year2), year_second(year2+year3), year_third(year3+year1)
year_first <- subset(year,year <- c(2007,2008))
#subset years into pairs: year_first (year1+year2), year_second(year2+year3), year_third(year3+year1)
year_first <- subset(year,year in c(2007,2008))
#subset years into pairs: year_first (year1+year2), year_second(year2+year3), year_third(year3+year1)
year_first <- subset(year,year = c(2007,2008))
year=2007 or year=2008
year=2007 | year=2008
year==2007 | year==2008
year
unique(year)
pen <-read.table(file.choose(), header=T)
pen <-read.table(file.choose(), header=T)
unique(year)
attach(pen)
str(pen)
pen$island<-as.factor(pen$island)
pen$sex<-as.factor(pen$sex)
pen$year<-as.factor(pen$year)
attach(pen)
unique(year)
unique(pen$year)
attach(pen)
str(pen)
pen <-read.table(file.choose(), header=T)
pen$island<-as.factor(pen$island)
pen$sex<-as.factor(pen$sex)
pen$year<-as.factor(pen$year)
str(pen)
#attaching dataframe 'pen'
attach(pen)
#Dependent variables are 4 body variables: bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g
#Independent variables are factor variables island, sex and year
yvars <- cbind(bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g)
years_first<-filter(pen, year==2007|year==2008)
years_first
years_first<-filter(pen, year==2007)
years_first<-subset(pen, year==2007)
years_first
years_first<-subset(pen, year==2007|year==2008)
years_first
years_second<-subset(pen, year==2009)
years_second
years_second<-subset(pen, year==2008|year==2009)
years_second
years_third<-subset(pen, year==2007|year==2009)
years_third
HotellingsT2Test(yvars~years_first)
HotellingsT2Test(yvars~years_first)
#Using library DescTools for function "HotellingsT2Test"
library(DescTools)
HotellingsT2Test(yvars~years_first)
HotellingsT2Test(yvars~years_first[year])
years_first
HotellingsT2Test(yvars~years_first$year)
yvars
HotellingsT2Test(yvars~years_sex)
HotellingsT2Test(yvars~sex)
nrow(sex)
ncol(sex)
sex
HotellingsT2Test(years_first$bill_length_mm~years_first)
type(years_first)
HotellingsT2Test(years_first$bill_length_mm~years_first$year)
str(years_first)
unique(years_first$year)
HotellingsT2Test(years_first$bill_length_mm~list(years_first$year))
HotellingsT2Test(years_first$bill_length_mm~as.list(years_first$year))
HotellingsT2Test(years_first$bill_length_mm~as.integer(years_first$year))
HotellingsT2Test(years_first$bill_length_mm~as.factor(as.integer(years_first$year)))
install.packages("wooldridge")
library(wooldridge)
data <- read.csv(ceosal1)
data <- read.csv(data=ceosal1)
data <- read.csv(data=ceosal1,header = T)
data <- read.csv('ceosal1',header = T)
data <- read.csv(ceosal1,header = T)
data <- read.csv(ceosal1[49:169],header = T)
data <- read.csv(ceosal1[49:169])
ceosal1[49:169]
ceosal1[49:169,]
data <- read.csv(ceosal1[49:169,])
data <- ceosal1[49:169,]
View(data)
data1 <- data[-11]
View(data1)
attach(data1)
model <- lm(data$lsalary~.)
str(data)
str(data.columns)
str(columns)
model <- lm(data$lsalary~.)
model <- lm(data$lsalary~salary+pcsalary+sales+roe+pcroe+ros+indus+finance+consprod+utility+lsales, data=data1)
model
x <- runif(40)
d <- runif(40, min = 1, max = 5)
d
(3.6-2.7)/5
mean(d)
data3 <- apple
apple
View(data3)
model2 <- lm(ecolbs~ecoprc+regprc,data=data3)
model2
summary(model2)
data3 <- apple[150:550,]
model2 <- lm(ecolbs~ecoprc+regprc,data=data3)
summary(model2)
model2 <- lm(ecolbs~ecoprc+regprc+faminc,data=data3)
summary(model2)
model2 <- lm(ecolbs~ecoprc+regprc+faminc+age,data=data3)
summary(model2)
1-pnorm(1.32)
runif(5, min = -3, max = 6,set.seed(100))
runif(5, min = -3, max = 6,set.seed=100)
set.seed=100
runif(5, min = -3, max = 6)
a <- c(17,11,5,11,15,13,7,9)
b <- c(9,5,3,4,3,6,4,7,4)
t.test(a,b,var.equal = T, mu=0)
t.test(a,b,var.equal = F, mu=0)
d <- c(8.0,6.5,10.0,9.5,8.5,7.0)
t.test(d,conf.level = 0.90)
library(prLogistic)
#Qn 3
library(prLogistic)
dataset <- read.xlsx('Problem8_Dataset.xlsx',header=T)
setwd("C:/Users/Admin/Desktop/GitRepo/Projects/Miscellaneous/New Project in R")
dataset <- read.xlsx('Problem8_Dataset.xlsx',header=T)
library(openxlsx)
dataset <- read.xlsx('Problem8_Dataset.xlsx',header=T)
dataset <- read.xls('Problem8_Dataset.xlsx',header=T)
dataset <- read_excel('Problem8_Dataset.xlsx',header=T)
dataset <- read.xls(file.choose(),header=T)
dataset <- read.xlsx(file.choose(),header=T)
dataset <- read.csv(file.choose(),header=T)
dataset <- read.csv(file.choose(),header=T)
dataset
dataset <- read.csv(file.choose(),header=T)
dataset
attach(dataset)
model8 <- lm(List_Price_y~Living_Area+Floors+Bedrooms+Bathrooms, data=dataset)
model8
summary(model8)
corr(dataset)
cor(dataset)
