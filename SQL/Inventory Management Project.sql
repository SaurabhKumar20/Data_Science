CREATE DATABASE INVENTORY;

USE INVENTORY;
--Inventory Database created

--Creating Product table
CREATE TABLE PRODUCT
(PID CHAR(5), 
PDESC VARCHAR(15) NOT NULL,
PRICE DECIMAL(5,2) CHECK(PRICE>0),
CATEGORY VARCHAR(15) CHECK(CATEGORY IN ('IT','HA','HC')),
SID CHAR(5) REFERENCES SUPPLIER(SID),
PRIMARY KEY(PID)
);


--Creating Supplier table
CREATE TABLE SUPPLIER
(SID CHAR(5), 
SNAME VARCHAR(30) NOT NULL,
SADD VARCHAR(30) NOT NULL,
SCITY VARCHAR(15) DEFAULT('DELHI'),
SPHONE CHAR(10) UNIQUE,
EMAIL VARCHAR(30),
PRIMARY KEY(SID)
);

--Creating Customer table
CREATE TABLE CUST
(CID CHAR(5), 
CNAME VARCHAR(15) NOT NULL,
ADDRESS VARCHAR(30) NOT NULL,
CITY VARCHAR(15) NOT NULL,
PHONE CHAR(10) NOT NULL,
EMAIL VARCHAR(30) NOT NULL,
DOB DATE CHECK(DOB<'1-JAN-2000'),
PRIMARY KEY(CID)
);

--Creating Orders table
CREATE TABLE ORDERS
(OID CHAR(5), 
ODATE DATE,
CID CHAR(5) REFERENCES CUST(CID),
PID CHAR(5) REFERENCES PRODUCT(PID),
OQTY NUMERIC CHECK(OQTY>=1),
PRIMARY KEY(OID)
);

--Creating Stock table
CREATE TABLE STOCK(
PID CHAR(5) REFERENCES PRODUCT(PID),
SQTY NUMERIC(5) CHECK(SQTY>=0),
ROL NUMERIC(5) CHECK(ROL>0), 
MOQ NUMERIC(5) CHECK(MOQ>=5)
);


--Function to generate a Alphanumeric ID
CREATE FUNCTION GENID(@C CHAR(1),@I INT)
RETURNS CHAR(5)
AS
BEGIN
	DECLARE @R CHAR(5);
	DECLARE @ID CHAR(5);
SELECT @R=CASE
		WHEN @I<10 THEN CONCAT(@C,'000')
		WHEN @I<100 THEN CONCAT(@C,'00')
		WHEN @I<1000 THEN CONCAT(@C,'0')
		WHEN @I<10000 THEN @C
		ELSE 'NULL'
	END;
SET @ID=RTRIM(@R)+LTRIM(CONVERT(CHAR(4),@I));
	RETURN @ID;
END;

CREATE SEQUENCE SUPPIER_SEQ 
AS INT
START WITH 1
INCREMENT BY 1;

--DROP SEQUENCE SUPPIER_SEQ;

CREATE PROCEDURE ADDSUPPLIER @A AS VARCHAR(15), @B AS VARCHAR(30), @C AS VARCHAR(15), @D AS CHAR(10), @E AS VARCHAR(30)
AS
BEGIN
	DECLARE @ID AS CHAR(5);
	DECLARE @I AS INT;

	SET @I=NEXT VALUE FOR SUPPIER_SEQ;
	SET @ID=DBO.GENID('S',@I);

	INSERT INTO SUPPLIER
	VALUES(@ID, @A, @B, @C, @D, @E);

	SELECT * FROM SUPPLIER;
END;


ADDSUPPLIER "Satyam Computer", "Shop no. 25, Nehru Place", "Delhi",  "9613066594", "SatyamComputers@gmail.com";

ADDSUPPLIER "Neelam Computer", "Shop no. 20, Pallika Bazar", "Delhi",  "9927636594", "NeelamComputers@yahoo.co.in";

ADDSUPPLIER "Swaroop Hardware", "Shop no. 120, Sarojini Nagar", "Delhi",  "9987659874", "SwaroopHardware@yahoo.co.in";


-- UPDATE SUPPLIER
-- SET SNAME='Swaroop Hardware' WHERE SNAME LIKE 'Swaroop%';



CREATE SEQUENCE CUST_SEQ 
AS INT
START WITH 4
INCREMENT BY 1;

--DROP SEQUENCE CUST_SEQ;

CREATE PROCEDURE ADDCUST @A AS VARCHAR(15), @B AS VARCHAR(30), @C AS VARCHAR(15), @D AS CHAR(10), @E AS VARCHAR(30), @F AS DATE
AS
BEGIN
	DECLARE @ID AS CHAR(5);
	DECLARE @I AS INT;

	SET @I=NEXT VALUE FOR CUST_SEQ;
	SET @ID=DBO.GENID('C',@I);

	INSERT INTO CUST
	VALUES(@ID, @A, @B, @C, @D, @E, @F);

	SELECT * FROM CUST;
END;

ADDCUST "Anjani Kumar", "C25, Navi-Mumbai", "Mumbai",  "9267346595", "Anjani@gmail.com", "10-JAN-1988";

ADDCUST "Rohit Khanna", "D20, Marthahelli", "Bangalore",  "9980000365", "Rohit@rediffmail.com", "20-OCT-1998";

ADDCUST "Rajesh", "A5, Bilaspur", "Punjab",  "9872907365", "Rajesh@gmail.com", "2-FEB-1999";

ADDCUST "Shravan", "A31, Dabawali Road", "Sirsa",  "9981111365", "Shravan@yahoo.co.in", "2-JAN-1996";


CREATE SEQUENCE PRODUCT_SEQ 
AS INT
START WITH 1
INCREMENT BY 1;


CREATE PROCEDURE ADDPRO @A AS VARCHAR(15), @B AS DECIMAL(5,2), @C AS VARCHAR(15), @D AS CHAR(5)
AS
BEGIN
	DECLARE @ID AS CHAR(5);
	DECLARE @I AS INT;

	SET @I=NEXT VALUE FOR PRODUCT_SEQ;
	SET @ID=DBO.GENID('P',@I);

	INSERT INTO PRODUCT
	VALUES(@ID, @A, @B, @C, @D);

	SELECT * FROM PRODUCT;
END;

ADDPRO "Nortan AV", 950, "IT", "S0003";

ADDPRO "Keyboard",  820, "HC", "S0002";

ADDPRO "Speakers", 900, "HC", "S0001";

ADDPRO "Mouse",  520, "HA", "S0002";




CREATE SEQUENCE ORDERS_SEQ 
AS INT
START WITH 5
INCREMENT BY 1;


CREATE PROCEDURE ADDORDER @A AS DATE, @B AS CHAR(5), @C AS CHAR(5), @D AS NUMERIC(5)
AS
BEGIN
	DECLARE @ID AS CHAR(5);
	DECLARE @I AS INT;

	SET @I=NEXT VALUE FOR ORDERS_SEQ;
	SET @ID=DBO.GENID('O',@I);

	INSERT INTO ORDERS
	VALUES(@ID, @A, @B, @C, @D);

	SELECT * FROM ORDERS;
END;

ADDORDER "10-AUG-2008", "C0001", "P0001", 3;

ADDORDER "20-SEP-2017",  "C0001", "P0002", 20;

ADDORDER "30-JUL-2010",  "C0001", "P0002", 25;

ADDORDER "15-JUN-2012",  "C0001", "P0004", 1;

ADDORDER "1-JAN-2012",  "C0003", "P0003", 10;


SELECT * FROM CUST;
SELECT * FROM ORDERS;
SELECT * FROM STOCK;


SELECT * FROM PRODUCT;
SELECT * FROM STOCK;

INSERT INTO STOCK
VALUES ('P0005',100,10,50);

INSERT INTO STOCK
VALUES ('P0004',30,10,7);

INSERT INTO STOCK
VALUES ('P0003',60,10,30);

INSERT INTO STOCK
VALUES ('P0001',40,20,15);




--TRIGGERS
CREATE TRIGGER TR_INSERT_ORDERS
ON ORDERS
FOR INSERT
AS
BEGIN
	SET NOCOUNT ON;
	UPDATE STOCK SET SQTY=SQTY-(SELECT OQTY FROM INSERTED)
	WHERE PID=(SELECT PID FROM INSERTED);
END;

CREATE TRIGGER TR_UPDATE_ORDERS
ON ORDERS
FOR UPDATE
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @OQTY AS INT;
	DECLARE @NQTY AS INT;
	SET @OQTY= (SELECT OQTY FROM DELETED);
	SET @NQTY=(SELECT OQTY FROM INSERTED);
	
	UPDATE STOCK
	SET SQTY=SQTY+@OQTY-@NQTY
	WHERE PID=(SELECT PID FROM INSERTED);
END;

CREATE TRIGGER TR_DELETE_PRODUCT
ON PRODUCT
FOR DELETE
AS
BEGIN
	SET NOCOUNT ON;
	DELETE FROM STOCK
	WHERE PID=(SELECT PID FROM DELETED);
END;




----------------------------------------GENERATING REPORTS-----------------------------------------------------------------






